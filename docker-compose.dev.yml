# This file is used to define the services that will be used in the application.
services:
  nginx:
    image: nginx:latest
    container_name: nginx_container
    restart: always
    networks:
      - mern_network
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - app_logs:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  mongo:
    image: mongo:latest
    container_name: mongo_container
    restart: always
    networks:
      - mern_network
    volumes:
      - mongo_data:/data/db
      - app_logs:/var/log/mongodb
    ports:
      - "27017:27017"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  server:
    image: wrlakshan/server:latest
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: api_container
    restart: always
    networks:
      - mern_network
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017/userDB
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || echo 'Health check failed'"]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - app_logs:/app/logs

  client:
    image: wrlakshan/client:latest
    build: 
      context: ./client
      dockerfile: Dockerfile.dev  # Use a production-specific Dockerfile
    container_name: client_container
    restart: always
    networks:
      - mern_network
    ports:
      - "3002:3000"
    depends_on:
      - server
    stdin_open: true
    tty: true

volumes:
  mongo_data:
  app_logs:  # volume for persistent logs

networks:
  mern_network:
    driver: bridge
